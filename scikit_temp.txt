pip install pydataset

from pydataset import data
import pandas as pd
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from matplotlib import pyplot as plt

%matplotlib notebook

data()

data('Pima.tr', show_doc = True)

pima = data('Pima.tr')

pima.plot(kind = 'scatter', x = 'skin', y = 'bmi')
plt.show()

#pima.plot(kind = 'scatter', x = 'age', y = 'npreg')
#plt.show()

# Test train split for supervised training 
X_train, x_test, y_train, y_test = train_test_split(pima.skin, pima.bmi)

# Test train split visualization
plt.scatter(X_train, y_train, label = 'Training data', color = 'r', alpha = .7)
plt.scatter(x_test, y_test, label = 'Testing data', color = 'g', alpha = .7)
plt.legend()
plt.title("Test Train Split")
plt.show()

LR = LinearRegression()
LR.fit(X_train.values.reshape(-1,1), y_train.values)

# Use model to predict on TEST data
prediction = LR.predict(x_test.values.reshape(-1,1))

# Plot prediction line against actual test data
plt.plot(x_test, prediction, label = 'Linear Regression', color = 'b')
plt.scatter(x_test, y_test, label = 'Actual Test Data', color = 'g', alpha = .7)
plt.legend()
plt.show()

# Predict BMI of woman with skin fold 50
LR.predict(np.array([[50]]))[0]

# Score this model
LR.score(x_test.values.reshape(-1,1), y_test.values)

